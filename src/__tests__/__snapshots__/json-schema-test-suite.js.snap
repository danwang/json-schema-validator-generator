// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`JSON Schema test suite additionalItems.json matches snapshot 1`] = `
"(function() {
  function f0(v0) {
    var v1;
    v1 = 1;
    for (; v1 < v0.length; v1++) {
      if (f1(v0[v1]) !== 0) {
        /* root: additionalItems */
        return [1];
      }
    }
    if (0 < v0.length && f2(v0[0]) !== 0) {
      /* root: items[0] */
      return [2];
    }
    return 0;
  }
  function f1(v0) {
    if (typeof v0 !== 'number' || v0 % 1 !== 0) {
      /* f1: type */
      return [3];
    }
    return 0;
  }
  function f2(v0) {
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite additionalItems.json matches snapshot 2`] = `
"(function() {
  function f0(v0) {
    var v1;
    if (Array.isArray(v0)) {
      v1 = 0;
      for (; v1 < v0.length; v1++) {
        if (f1(v0[v1]) !== 0) {
          /* root: items */
          return [1];
        }
      }
    }
    return 0;
  }
  function f1(v0) {
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite additionalItems.json matches snapshot 3`] = `
"(function() {
  function f0(v0) {
    if (v0.length > 3) {
      /* root: additionalItems */
      return [1];
    }
    if (0 < v0.length && f1(v0[0]) !== 0) {
      /* root: items[0] */
      return [2];
    }
    if (1 < v0.length && f1(v0[1]) !== 0) {
      /* root: items[1] */
      return [3];
    }
    if (2 < v0.length && f1(v0[2]) !== 0) {
      /* root: items[2] */
      return [4];
    }
    return 0;
  }
  function f1(v0) {
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite additionalItems.json matches snapshot 4`] = `
"(function() {
  function f0(v0) {
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite additionalItems.json matches snapshot 5`] = `
"(function() {
  function f0(v0) {
    if (0 < v0.length && f1(v0[0]) !== 0) {
      /* root: items[0] */
      return [1];
    }
    return 0;
  }
  function f1(v0) {
    if (typeof v0 !== 'number' || v0 % 1 !== 0) {
      /* f1: type */
      return [2];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite additionalProperties.json matches snapshot 1`] = `
"(function() {
  function f0(v0) {
    var v1, v2, v4, v3;
    if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
      for (var v1 in v0) {
        v2 = v0[v1];
        v4 = false;
        if (v1 === 'foo') {
          v3 = f1(v2);
          if (v3 !== 0) {
            /* root: properties[foo] */
            return v3.concat(1);
          } else {
            v4 = true;
          }
        }
        if (v1 === 'bar') {
          v3 = f1(v2);
          if (v3 !== 0) {
            /* root: properties[bar] */
            return v3.concat(2);
          } else {
            v4 = true;
          }
        }
        if (v1.match(/^v/)) {
          v3 = f1(v2);
          if (v3 !== 0) {
            /* root: properties[^v] */
            return v3.concat(3);
          } else {
            v4 = true;
          }
        }
        if (v4 === false) {
          /* root: additionalProperties */
          return [4];
        }
      }
    }
    return 0;
  }
  function f1(v0) {
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite additionalProperties.json matches snapshot 2`] = `
"(function() {
  function f0(v0) {
    var v1, v2, v4, v3, v5;
    if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
      for (var v1 in v0) {
        v2 = v0[v1];
        v4 = false;
        if (v1 === 'foo') {
          v3 = f1(v2);
          if (v3 !== 0) {
            /* root: properties[foo] */
            return v3.concat(1);
          } else {
            v4 = true;
          }
        }
        if (v1 === 'bar') {
          v3 = f1(v2);
          if (v3 !== 0) {
            /* root: properties[bar] */
            return v3.concat(2);
          } else {
            v4 = true;
          }
        }
        if (v4 === false) {
          v5 = f2(v2);
          if (v5 !== 0) {
            /* root: additionalProperties */
            return v5.concat(3);
          }
        }
      }
    }
    return 0;
  }
  function f1(v0) {
    return 0;
  }
  function f2(v0) {
    if (typeof v0 !== 'boolean') {
      /* f2: type */
      return [4];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite additionalProperties.json matches snapshot 3`] = `
"(function() {
  function f0(v0) {
    var v1, v2, v4;
    if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
      for (var v1 in v0) {
        v2 = v0[v1];
        v4 = f1(v2);
        if (v4 !== 0) {
          /* root: additionalProperties */
          return v4.concat(1);
        }
      }
    }
    return 0;
  }
  function f1(v0) {
    if (typeof v0 !== 'boolean') {
      /* f1: type */
      return [2];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite additionalProperties.json matches snapshot 4`] = `
"(function() {
  function f0(v0) {
    var v2, v1;
    if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
      v2 = v0.foo;
      if (v2 !== undefined) {
        v1 = f1(v2);
        if (v1 !== 0) {
          /* root: properties[foo] */
          return v1.concat(1);
        }
      }
      v2 = v0.bar;
      if (v2 !== undefined) {
        v1 = f1(v2);
        if (v1 !== 0) {
          /* root: properties[bar] */
          return v1.concat(2);
        }
      }
    }
    return 0;
  }
  function f1(v0) {
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite allOf.json matches snapshot 1`] = `
"(function() {
  function f0(v0) {
    var v1;
    v1 = f1(v0);
    if (v1 !== 0) {
      /* root: allOf */
      return v1.concat(1);
    }
    v1 = f2(v0);
    if (v1 !== 0) {
      /* root: allOf */
      return v1.concat(1);
    }
    return 0;
  }
  function f1(v0) {
    var v2, v1;
    if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
      v2 = v0.bar;
      if (v2 !== undefined) {
        v1 = f3(v2);
        if (v1 !== 0) {
          /* f1: properties[bar] */
          return v1.concat(2);
        }
      } else {
        /* f1: required[bar] */
        return [3];
      }
    }
    return 0;
  }
  function f2(v0) {
    var v2, v1;
    if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
      v2 = v0.foo;
      if (v2 !== undefined) {
        v1 = f4(v2);
        if (v1 !== 0) {
          /* f2: properties[foo] */
          return v1.concat(4);
        }
      } else {
        /* f2: required[foo] */
        return [5];
      }
    }
    return 0;
  }
  function f3(v0) {
    if (typeof v0 !== 'number' || v0 % 1 !== 0) {
      /* f3: type */
      return [6];
    }
    return 0;
  }
  function f4(v0) {
    if (typeof v0 !== 'string') {
      /* f4: type */
      return [7];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite allOf.json matches snapshot 2`] = `
"(function() {
  function f0(v0) {
    var v1, v3, v2;
    v1 = f1(v0);
    if (v1 !== 0) {
      /* root: allOf */
      return v1.concat(1);
    }
    v1 = f2(v0);
    if (v1 !== 0) {
      /* root: allOf */
      return v1.concat(1);
    }
    if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
      v3 = v0.bar;
      if (v3 !== undefined) {
        v2 = f3(v3);
        if (v2 !== 0) {
          /* root: properties[bar] */
          return v2.concat(2);
        }
      } else {
        /* root: required[bar] */
        return [3];
      }
    }
    return 0;
  }
  function f1(v0) {
    var v2, v1;
    if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
      v2 = v0.foo;
      if (v2 !== undefined) {
        v1 = f4(v2);
        if (v1 !== 0) {
          /* f1: properties[foo] */
          return v1.concat(4);
        }
      } else {
        /* f1: required[foo] */
        return [5];
      }
    }
    return 0;
  }
  function f2(v0) {
    var v2, v1;
    if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
      v2 = v0.baz;
      if (v2 !== undefined) {
        v1 = f5(v2);
        if (v1 !== 0) {
          /* f2: properties[baz] */
          return v1.concat(6);
        }
      } else {
        /* f2: required[baz] */
        return [7];
      }
    }
    return 0;
  }
  function f3(v0) {
    if (typeof v0 !== 'number' || v0 % 1 !== 0) {
      /* f3: type */
      return [8];
    }
    return 0;
  }
  function f4(v0) {
    if (typeof v0 !== 'string') {
      /* f4: type */
      return [9];
    }
    return 0;
  }
  function f5(v0) {
    if (v0 !== null) {
      /* f5: type */
      return [10];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite allOf.json matches snapshot 3`] = `
"(function() {
  function f0(v0) {
    var v1;
    v1 = f1(v0);
    if (v1 !== 0) {
      /* root: allOf */
      return v1.concat(1);
    }
    v1 = f2(v0);
    if (v1 !== 0) {
      /* root: allOf */
      return v1.concat(1);
    }
    return 0;
  }
  function f1(v0) {
    if (typeof v0 === 'number' && v0 > 30) {
      /* f1: maximum */
      return [2];
    }
    return 0;
  }
  function f2(v0) {
    if (typeof v0 === 'number' && v0 < 20) {
      /* f2: minimum */
      return [3];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite anyOf.json matches snapshot 1`] = `
"(function() {
  function f0(v0) {
    var v1;
    v1 = 0;
    f1(v0) === 0 && v1++;
    f2(v0) === 0 && v1++;
    if (v1 === 0) {
      /* root: anyOf */
      return [1];
    }
    return 0;
  }
  function f1(v0) {
    if (typeof v0 !== 'number' || v0 % 1 !== 0) {
      /* f1: type */
      return [2];
    }
    return 0;
  }
  function f2(v0) {
    if (typeof v0 === 'number' && v0 < 2) {
      /* f2: minimum */
      return [3];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite anyOf.json matches snapshot 2`] = `
"(function() {
  function f0(v0) {
    var v1;
    v1 = 0;
    f1(v0) === 0 && v1++;
    f2(v0) === 0 && v1++;
    if (v1 === 0) {
      /* root: anyOf */
      return [1];
    }
    if (typeof v0 !== 'string') {
      /* root: type */
      return [2];
    }
    return 0;
  }
  function f1(v0) {
    if (typeof v0 === 'string' && v0.length > 2) {
      /* f1: maxLength */
      return [3];
    }
    return 0;
  }
  function f2(v0) {
    if (typeof v0 === 'string' && v0.length < 4) {
      /* f2: minLength */
      return [4];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite default.json matches snapshot 1`] = `
"(function() {
  function f0(v0) {
    var v2, v1;
    if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
      v2 = v0.foo;
      if (v2 !== undefined) {
        v1 = f1(v2);
        if (v1 !== 0) {
          /* root: properties[foo] */
          return v1.concat(1);
        }
      }
    }
    return 0;
  }
  function f1(v0) {
    if (typeof v0 !== 'number' || v0 % 1 !== 0) {
      /* f1: type */
      return [2];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite default.json matches snapshot 2`] = `
"(function() {
  function f0(v0) {
    var v2, v1;
    if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
      v2 = v0.bar;
      if (v2 !== undefined) {
        v1 = f1(v2);
        if (v1 !== 0) {
          /* root: properties[bar] */
          return v1.concat(1);
        }
      }
    }
    return 0;
  }
  function f1(v0) {
    if (typeof v0 === 'string' && v0.length < 4) {
      /* f1: minLength */
      return [2];
    }
    if (typeof v0 !== 'string') {
      /* f1: type */
      return [3];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite dependencies.json matches snapshot 1`] = `
"(function() {
  function f0(v0) {
    if (
      v0 &&
      typeof v0 === 'object' &&
      !Array.isArray(v0) &&
      v0.bar !== undefined &&
      v0.foo === undefined
    ) {
      /* root: dependencies[bar] */
      return [1];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite dependencies.json matches snapshot 2`] = `
"(function() {
  function f0(v0) {
    if (
      v0 &&
      typeof v0 === 'object' &&
      !Array.isArray(v0) &&
      v0.quux !== undefined
    ) {
      if (v0.foo === undefined) {
        /* root: dependencies[quux] */
        return [1];
      }
      if (v0.bar === undefined) {
        /* root: dependencies[quux] */
        return [1];
      }
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite dependencies.json matches snapshot 3`] = `
"(function() {
  function f0(v0) {
    if (
      v0 &&
      typeof v0 === 'object' &&
      !Array.isArray(v0) &&
      v0.bar !== undefined &&
      f1(v0) !== 0
    ) {
      /* root: dependencies[bar] */
      return [1];
    }
    return 0;
  }
  function f1(v0) {
    var v2, v1;
    if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
      v2 = v0.foo;
      if (v2 !== undefined) {
        v1 = f2(v2);
        if (v1 !== 0) {
          /* f1: properties[foo] */
          return v1.concat(2);
        }
      }
      v2 = v0.bar;
      if (v2 !== undefined) {
        v1 = f2(v2);
        if (v1 !== 0) {
          /* f1: properties[bar] */
          return v1.concat(3);
        }
      }
    }
    return 0;
  }
  function f2(v0) {
    if (typeof v0 !== 'number' || v0 % 1 !== 0) {
      /* f2: type */
      return [4];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite enum.json matches snapshot 1`] = `
"(function() {
  function f0(v0) {
    var v1;
    v1 = 0;
    if (v0 === 1) {
      v1++;
    }
    if (v0 === 2) {
      v1++;
    }
    if (v0 === 3) {
      v1++;
    }
    if (v1 === 0) {
      /* root: enum */
      return [1];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite enum.json matches snapshot 2`] = `
"(function() {
  function f0(v0) {
    var v1;
    v1 = 0;
    if (v0 === 6) {
      v1++;
    }
    if (v0 === 'foo') {
      v1++;
    }
    if (JSON.stringify(v0) === '[]') {
      v1++;
    }
    if (v0 === true) {
      v1++;
    }
    if (JSON.stringify(v0) === '{\\"foo\\":12}') {
      v1++;
    }
    if (v1 === 0) {
      /* root: enum */
      return [1];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite enum.json matches snapshot 3`] = `
"(function() {
  function f0(v0) {
    var v2, v1;
    if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
      v2 = v0.foo;
      if (v2 !== undefined) {
        v1 = f1(v2);
        if (v1 !== 0) {
          /* root: properties[foo] */
          return v1.concat(1);
        }
      }
      v2 = v0.bar;
      if (v2 !== undefined) {
        v1 = f2(v2);
        if (v1 !== 0) {
          /* root: properties[bar] */
          return v1.concat(2);
        }
      } else {
        /* root: required[bar] */
        return [3];
      }
    }
    if (!v0 || typeof v0 !== 'object' || Array.isArray(v0)) {
      /* root: type */
      return [4];
    }
    return 0;
  }
  function f1(v0) {
    var v1;
    v1 = 0;
    if (v0 === 'foo') {
      v1++;
    }
    if (v1 === 0) {
      /* f1: enum */
      return [5];
    }
    return 0;
  }
  function f2(v0) {
    var v1;
    v1 = 0;
    if (v0 === 'bar') {
      v1++;
    }
    if (v1 === 0) {
      /* f2: enum */
      return [6];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite items.json matches snapshot 1`] = `
"(function() {
  function f0(v0) {
    var v1;
    if (Array.isArray(v0)) {
      v1 = 0;
      for (; v1 < v0.length; v1++) {
        if (f1(v0[v1]) !== 0) {
          /* root: items */
          return [1];
        }
      }
    }
    return 0;
  }
  function f1(v0) {
    if (typeof v0 !== 'number' || v0 % 1 !== 0) {
      /* f1: type */
      return [2];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite items.json matches snapshot 2`] = `
"(function() {
  function f0(v0) {
    if (0 < v0.length && f1(v0[0]) !== 0) {
      /* root: items[0] */
      return [1];
    }
    if (1 < v0.length && f2(v0[1]) !== 0) {
      /* root: items[1] */
      return [2];
    }
    return 0;
  }
  function f1(v0) {
    if (typeof v0 !== 'number' || v0 % 1 !== 0) {
      /* f1: type */
      return [3];
    }
    return 0;
  }
  function f2(v0) {
    if (typeof v0 !== 'string') {
      /* f2: type */
      return [4];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite maxItems.json matches snapshot 1`] = `
"(function() {
  function f0(v0) {
    if (Array.isArray(v0) && v0.length > 2) {
      /* root: maxItems */
      return [1];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite maxLength.json matches snapshot 1`] = `
"(function() {
  function f0(v0) {
    if (typeof v0 === 'string' && v0.length > 2) {
      /* root: maxLength */
      return [1];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite maxProperties.json matches snapshot 1`] = `
"(function() {
  function f0(v0) {
    if (
      v0 &&
      typeof v0 === 'object' &&
      !Array.isArray(v0) &&
      Object.keys(v0).length > 2
    ) {
      /* root: maxProperties */
      return [1];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite maximum.json matches snapshot 1`] = `
"(function() {
  function f0(v0) {
    if (typeof v0 === 'number' && v0 > 3) {
      /* root: maximum */
      return [1];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite maximum.json matches snapshot 2`] = `
"(function() {
  function f0(v0) {
    if (typeof v0 === 'number' && v0 >= 3) {
      /* root: maximum */
      return [1];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite minItems.json matches snapshot 1`] = `
"(function() {
  function f0(v0) {
    if (Array.isArray(v0) && v0.length < 1) {
      /* root: minItems */
      return [1];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite minLength.json matches snapshot 1`] = `
"(function() {
  function f0(v0) {
    if (typeof v0 === 'string' && v0.length < 2) {
      /* root: minLength */
      return [1];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite minProperties.json matches snapshot 1`] = `
"(function() {
  function f0(v0) {
    if (
      v0 &&
      typeof v0 === 'object' &&
      !Array.isArray(v0) &&
      Object.keys(v0).length < 1
    ) {
      /* root: minProperties */
      return [1];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite minimum.json matches snapshot 1`] = `
"(function() {
  function f0(v0) {
    if (typeof v0 === 'number' && v0 < 1.1) {
      /* root: minimum */
      return [1];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite minimum.json matches snapshot 2`] = `
"(function() {
  function f0(v0) {
    if (typeof v0 === 'number' && v0 <= 1.1) {
      /* root: minimum */
      return [1];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite multipleOf.json matches snapshot 1`] = `
"(function() {
  function f0(v0) {
    var v1;
    if (typeof v0 === 'number') {
      v1 = v0 / 2;
      if (typeof v1 !== 'number' || v1 % 1 !== 0) {
        /* root: multipleOf */
        return [1];
      }
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite multipleOf.json matches snapshot 2`] = `
"(function() {
  function f0(v0) {
    var v1;
    if (typeof v0 === 'number') {
      v1 = v0 / 1.5;
      if (typeof v1 !== 'number' || v1 % 1 !== 0) {
        /* root: multipleOf */
        return [1];
      }
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite multipleOf.json matches snapshot 3`] = `
"(function() {
  function f0(v0) {
    var v1;
    if (typeof v0 === 'number') {
      v1 = v0 / 0.0001;
      if (typeof v1 !== 'number' || v1 % 1 !== 0) {
        /* root: multipleOf */
        return [1];
      }
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite not.json matches snapshot 1`] = `
"(function() {
  function f0(v0) {
    if (f1(v0) === 0) {
      /* root: not */
      return [1];
    }
    return 0;
  }
  function f1(v0) {
    if (typeof v0 !== 'number' || v0 % 1 !== 0) {
      /* f1: type */
      return [2];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite not.json matches snapshot 2`] = `
"(function() {
  function f0(v0) {
    if (f1(v0) === 0) {
      /* root: not */
      return [1];
    }
    return 0;
  }
  function f1(v0) {
    var v3;
    v3 = 0;
    if (typeof v0 !== 'number' || v0 % 1 !== 0) {
      v3++;
    }
    if (typeof v0 !== 'boolean') {
      v3++;
    }
    if (v3 === 2) {
      /* f1: type */
      return [2];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite not.json matches snapshot 3`] = `
"(function() {
  function f0(v0) {
    if (f1(v0) === 0) {
      /* root: not */
      return [1];
    }
    return 0;
  }
  function f1(v0) {
    var v2, v1;
    if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
      v2 = v0.foo;
      if (v2 !== undefined) {
        v1 = f2(v2);
        if (v1 !== 0) {
          /* f1: properties[foo] */
          return v1.concat(2);
        }
      }
    }
    if (!v0 || typeof v0 !== 'object' || Array.isArray(v0)) {
      /* f1: type */
      return [3];
    }
    return 0;
  }
  function f2(v0) {
    if (typeof v0 !== 'string') {
      /* f2: type */
      return [4];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite not.json matches snapshot 4`] = `
"(function() {
  function f0(v0) {
    var v2, v1;
    if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
      v2 = v0.foo;
      if (v2 !== undefined) {
        v1 = f1(v2);
        if (v1 !== 0) {
          /* root: properties[foo] */
          return v1.concat(1);
        }
      }
    }
    return 0;
  }
  function f1(v0) {
    if (f2(v0) === 0) {
      /* f1: not */
      return [2];
    }
    return 0;
  }
  function f2(v0) {
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite oneOf.json matches snapshot 1`] = `
"(function() {
  function f0(v0) {
    var v1;
    v1 = 0;
    if (f1(v0) === 0) {
      v1++;
    }
    if (f2(v0) === 0) {
      v1++;
    }
    if (v1 !== 1) {
      /* root: oneOf */
      return [1];
    }
    return 0;
  }
  function f1(v0) {
    if (typeof v0 !== 'number' || v0 % 1 !== 0) {
      /* f1: type */
      return [2];
    }
    return 0;
  }
  function f2(v0) {
    if (typeof v0 === 'number' && v0 < 2) {
      /* f2: minimum */
      return [3];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite oneOf.json matches snapshot 2`] = `
"(function() {
  function f0(v0) {
    var v1;
    v1 = 0;
    if (f1(v0) === 0) {
      v1++;
    }
    if (f2(v0) === 0) {
      v1++;
    }
    if (v1 !== 1) {
      /* root: oneOf */
      return [1];
    }
    if (typeof v0 !== 'string') {
      /* root: type */
      return [2];
    }
    return 0;
  }
  function f1(v0) {
    if (typeof v0 === 'string' && v0.length < 2) {
      /* f1: minLength */
      return [3];
    }
    return 0;
  }
  function f2(v0) {
    if (typeof v0 === 'string' && v0.length > 4) {
      /* f2: maxLength */
      return [4];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite pattern.json matches snapshot 1`] = `
"(function() {
  function f0(v0) {
    if (typeof v0 === 'string' && !v0.match(/^a*$/)) {
      /* root: pattern */
      return [1];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite pattern.json matches snapshot 2`] = `
"(function() {
  function f0(v0) {
    if (typeof v0 === 'string' && !v0.match(/a+/)) {
      /* root: pattern */
      return [1];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite patternProperties.json matches snapshot 1`] = `
"(function() {
  function f0(v0) {
    var v1, v2, v3;
    if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
      for (var v1 in v0) {
        v2 = v0[v1];
        if (v1.match(/f.*o/)) {
          v3 = f1(v2);
          if (v3 !== 0) {
            /* root: properties[f.*o] */
            return v3.concat(1);
          }
        }
      }
    }
    return 0;
  }
  function f1(v0) {
    if (typeof v0 !== 'number' || v0 % 1 !== 0) {
      /* f1: type */
      return [2];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite patternProperties.json matches snapshot 2`] = `
"(function() {
  function f0(v0) {
    var v1, v2, v3;
    if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
      for (var v1 in v0) {
        v2 = v0[v1];
        if (v1.match(/a*/)) {
          v3 = f1(v2);
          if (v3 !== 0) {
            /* root: properties[a*] */
            return v3.concat(1);
          }
        }
        if (v1.match(/aaa*/)) {
          v3 = f2(v2);
          if (v3 !== 0) {
            /* root: properties[aaa*] */
            return v3.concat(2);
          }
        }
      }
    }
    return 0;
  }
  function f1(v0) {
    if (typeof v0 !== 'number' || v0 % 1 !== 0) {
      /* f1: type */
      return [3];
    }
    return 0;
  }
  function f2(v0) {
    if (typeof v0 === 'number' && v0 > 20) {
      /* f2: maximum */
      return [4];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite patternProperties.json matches snapshot 3`] = `
"(function() {
  function f0(v0) {
    var v1, v2, v3;
    if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
      for (var v1 in v0) {
        v2 = v0[v1];
        if (v1.match(/[0-9]{2,}/)) {
          v3 = f1(v2);
          if (v3 !== 0) {
            /* root: properties[[0-9]{2,}] */
            return v3.concat(1);
          }
        }
        if (v1.match(/X_/)) {
          v3 = f2(v2);
          if (v3 !== 0) {
            /* root: properties[X_] */
            return v3.concat(2);
          }
        }
      }
    }
    return 0;
  }
  function f1(v0) {
    if (typeof v0 !== 'boolean') {
      /* f1: type */
      return [3];
    }
    return 0;
  }
  function f2(v0) {
    if (typeof v0 !== 'string') {
      /* f2: type */
      return [4];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite properties.json matches snapshot 1`] = `
"(function() {
  function f0(v0) {
    var v2, v1;
    if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
      v2 = v0.foo;
      if (v2 !== undefined) {
        v1 = f1(v2);
        if (v1 !== 0) {
          /* root: properties[foo] */
          return v1.concat(1);
        }
      }
      v2 = v0.bar;
      if (v2 !== undefined) {
        v1 = f2(v2);
        if (v1 !== 0) {
          /* root: properties[bar] */
          return v1.concat(2);
        }
      }
    }
    return 0;
  }
  function f1(v0) {
    if (typeof v0 !== 'number' || v0 % 1 !== 0) {
      /* f1: type */
      return [3];
    }
    return 0;
  }
  function f2(v0) {
    if (typeof v0 !== 'string') {
      /* f2: type */
      return [4];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite properties.json matches snapshot 2`] = `
"(function() {
  function f0(v0) {
    var v1, v2, v4, v3, v5;
    if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
      for (var v1 in v0) {
        v2 = v0[v1];
        v4 = false;
        if (v1 === 'foo') {
          v3 = f1(v2);
          if (v3 !== 0) {
            /* root: properties[foo] */
            return v3.concat(1);
          } else {
            v4 = true;
          }
        }
        if (v1 === 'bar') {
          v3 = f2(v2);
          if (v3 !== 0) {
            /* root: properties[bar] */
            return v3.concat(2);
          } else {
            v4 = true;
          }
        }
        if (v1.match(/f.o/)) {
          v3 = f3(v2);
          if (v3 !== 0) {
            /* root: properties[f.o] */
            return v3.concat(3);
          } else {
            v4 = true;
          }
        }
        if (v4 === false) {
          v5 = f4(v2);
          if (v5 !== 0) {
            /* root: additionalProperties */
            return v5.concat(4);
          }
        }
      }
    }
    return 0;
  }
  function f1(v0) {
    if (Array.isArray(v0) && v0.length > 3) {
      /* f1: maxItems */
      return [5];
    }
    if (!Array.isArray(v0)) {
      /* f1: type */
      return [6];
    }
    return 0;
  }
  function f2(v0) {
    if (!Array.isArray(v0)) {
      /* f2: type */
      return [7];
    }
    return 0;
  }
  function f3(v0) {
    if (Array.isArray(v0) && v0.length < 2) {
      /* f3: minItems */
      return [8];
    }
    return 0;
  }
  function f4(v0) {
    if (typeof v0 !== 'number' || v0 % 1 !== 0) {
      /* f4: type */
      return [9];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite ref.json matches snapshot 1`] = `
"(function() {
  function f0(v0) {
    var v1, v2, v4, v3;
    if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
      for (var v1 in v0) {
        v2 = v0[v1];
        v4 = false;
        if (v1 === 'foo') {
          v3 = f0(v2);
          if (v3 !== 0) {
            /* root: properties[foo] */
            return v3.concat(1);
          } else {
            v4 = true;
          }
        }
        if (v4 === false) {
          /* root: additionalProperties */
          return [2];
        }
      }
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite ref.json matches snapshot 2`] = `
"(function() {
  function f0(v0) {
    var v2, v1;
    if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
      v2 = v0.foo;
      if (v2 !== undefined) {
        v1 = f1(v2);
        if (v1 !== 0) {
          /* root: properties[foo] */
          return v1.concat(1);
        }
      }
      v2 = v0.bar;
      if (v2 !== undefined) {
        v1 = f1(v2);
        if (v1 !== 0) {
          /* root: properties[bar] */
          return v1.concat(2);
        }
      }
    }
    return 0;
  }
  function f1(v0) {
    if (typeof v0 !== 'number' || v0 % 1 !== 0) {
      /* f1: type */
      return [3];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite ref.json matches snapshot 3`] = `
"(function() {
  function f0(v0) {
    if (0 < v0.length && f1(v0[0]) !== 0) {
      /* root: items[0] */
      return [1];
    }
    if (1 < v0.length && f1(v0[1]) !== 0) {
      /* root: items[1] */
      return [2];
    }
    return 0;
  }
  function f1(v0) {
    if (typeof v0 !== 'number' || v0 % 1 !== 0) {
      /* f1: type */
      return [3];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite ref.json matches snapshot 4`] = `
"(function() {
  function f0(v0) {
    var v2, v1;
    if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
      v2 = v0.tilda;
      if (v2 !== undefined) {
        v1 = f4(v2);
        if (v1 !== 0) {
          /* root: properties[tilda] */
          return v1.concat(1);
        }
      }
      v2 = v0.slash;
      if (v2 !== undefined) {
        v1 = f4(v2);
        if (v1 !== 0) {
          /* root: properties[slash] */
          return v1.concat(2);
        }
      }
      v2 = v0.percent;
      if (v2 !== undefined) {
        v1 = f4(v2);
        if (v1 !== 0) {
          /* root: properties[percent] */
          return v1.concat(3);
        }
      }
    }
    return 0;
  }
  function f4(v0) {
    if (typeof v0 !== 'number' || v0 % 1 !== 0) {
      /* f4: type */
      return [4];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite ref.json matches snapshot 5`] = `
"(function() {
  function f3(v0) {
    if (typeof v0 !== 'number' || v0 % 1 !== 0) {
      /* f3: type */
      return [1];
    }
    return 0;
  }
  return {
    root: f3,
  };
})();
"
`;

exports[`JSON Schema test suite ref.json matches snapshot 6`] = `
"(function() {
  function f0(v0) {
    var v2, v1;
    if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
      v2 = v0.foo;
      if (v2 !== undefined) {
        v1 = f2(v2);
        if (v1 !== 0) {
          /* root: properties[foo] */
          return v1.concat(1);
        }
      }
    }
    return 0;
  }
  function f2(v0) {
    if (!Array.isArray(v0)) {
      /* f2: type */
      return [2];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite ref.json matches snapshot 7`] = `
"(function() {
  function f0(v0) {
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite ref.json matches snapshot 8`] = `
"(function() {
  function f0(v0) {
    var v2, v1;
    if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
      v2 = v0.$ref;
      if (v2 !== undefined) {
        v1 = f1(v2);
        if (v1 !== 0) {
          /* root: properties[$ref] */
          return v1.concat(1);
        }
      }
    }
    return 0;
  }
  function f1(v0) {
    if (typeof v0 !== 'string') {
      /* f1: type */
      return [2];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite ref.json matches snapshot 9`] = `
"(function() {
  function f0(v0) {
    var v2, v1;
    if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
      v2 = v0.meta;
      if (v2 !== undefined) {
        v1 = f1(v2);
        if (v1 !== 0) {
          /* root: properties[meta] */
          return v1.concat(1);
        }
      } else {
        /* root: required[meta] */
        return [2];
      }
      v2 = v0.nodes;
      if (v2 !== undefined) {
        v1 = f2(v2);
        if (v1 !== 0) {
          /* root: properties[nodes] */
          return v1.concat(3);
        }
      } else {
        /* root: required[nodes] */
        return [4];
      }
    }
    if (!v0 || typeof v0 !== 'object' || Array.isArray(v0)) {
      /* root: type */
      return [5];
    }
    return 0;
  }
  function f1(v0) {
    if (typeof v0 !== 'string') {
      /* f1: type */
      return [6];
    }
    return 0;
  }
  function f2(v0) {
    var v1;
    if (Array.isArray(v0)) {
      v1 = 0;
      for (; v1 < v0.length; v1++) {
        if (f3(v0[v1]) !== 0) {
          /* f2: items */
          return [7];
        }
      }
    }
    if (!Array.isArray(v0)) {
      /* f2: type */
      return [8];
    }
    return 0;
  }
  function f3(v0) {
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite required.json matches snapshot 1`] = `
"(function() {
  function f0(v0) {
    var v2, v1;
    if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
      v2 = v0.foo;
      if (v2 !== undefined) {
        v1 = f1(v2);
        if (v1 !== 0) {
          /* root: properties[foo] */
          return v1.concat(1);
        }
      } else {
        /* root: required[foo] */
        return [2];
      }
      v2 = v0.bar;
      if (v2 !== undefined) {
        v1 = f1(v2);
        if (v1 !== 0) {
          /* root: properties[bar] */
          return v1.concat(3);
        }
      }
    }
    return 0;
  }
  function f1(v0) {
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite required.json matches snapshot 2`] = `
"(function() {
  function f0(v0) {
    var v2, v1;
    if (v0 && typeof v0 === 'object' && !Array.isArray(v0)) {
      v2 = v0.foo;
      if (v2 !== undefined) {
        v1 = f1(v2);
        if (v1 !== 0) {
          /* root: properties[foo] */
          return v1.concat(1);
        }
      }
    }
    return 0;
  }
  function f1(v0) {
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite type.json matches snapshot 1`] = `
"(function() {
  function f0(v0) {
    if (typeof v0 !== 'number' || v0 % 1 !== 0) {
      /* root: type */
      return [1];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite type.json matches snapshot 2`] = `
"(function() {
  function f0(v0) {
    if (typeof v0 !== 'number') {
      /* root: type */
      return [1];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite type.json matches snapshot 3`] = `
"(function() {
  function f0(v0) {
    if (typeof v0 !== 'string') {
      /* root: type */
      return [1];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite type.json matches snapshot 4`] = `
"(function() {
  function f0(v0) {
    if (!v0 || typeof v0 !== 'object' || Array.isArray(v0)) {
      /* root: type */
      return [1];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite type.json matches snapshot 5`] = `
"(function() {
  function f0(v0) {
    if (!Array.isArray(v0)) {
      /* root: type */
      return [1];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite type.json matches snapshot 6`] = `
"(function() {
  function f0(v0) {
    if (typeof v0 !== 'boolean') {
      /* root: type */
      return [1];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite type.json matches snapshot 7`] = `
"(function() {
  function f0(v0) {
    if (v0 !== null) {
      /* root: type */
      return [1];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite type.json matches snapshot 8`] = `
"(function() {
  function f0(v0) {
    var v3;
    v3 = 0;
    if (typeof v0 !== 'number' || v0 % 1 !== 0) {
      v3++;
    }
    if (typeof v0 !== 'string') {
      v3++;
    }
    if (v3 === 2) {
      /* root: type */
      return [1];
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;

exports[`JSON Schema test suite uniqueItems.json matches snapshot 1`] = `
"(function() {
  function f0(v0) {
    var v3, v4, v5;
    if (Array.isArray(v0)) {
      v3 = {};
      v4 = 0;
      for (; v4 < v0.length; v4++) {
        v5 = JSON.stringify(v0[v4]);
        v3[v5] = true;
      }
      if (Object.keys(v3).length !== v0.length) {
        /* root: uniqueItems */
        return [1];
      }
    }
    return 0;
  }
  return {
    root: f0,
  };
})();
"
`;
